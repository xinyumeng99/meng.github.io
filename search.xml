<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用Github+Hexo搭建个人博客|No.1</title>
    <url>/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/</url>
    <content><![CDATA[<p>花了好几天时间搭建了一个自己的hexo博客，附上链接，欢迎来访：<br>
<a href="https://stupidbunny.top">Stupid bunny-笨小兔</a></p>
<a id="more"></a>
<p>[TOC]</p>
<h3 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h3>
<p>现在市面上的博客很多，如CSDN，博客园，简书等等，可以在博客上发表一些文章，大家共同努力学习，这里呢，给大家展示使用Github和Hexo来搭建静态博客</p>
<blockquote>
<p><strong>静态网页</strong>简单来说就是设计者把页面的东西设计好了，只是发布上去，本地浏览器就能访问。而<strong>动态网页</strong>的内容都是依靠服务器来运行的。管理者发布文章的时候只需要进入后台发布就行，发布后想更改也非常容易。需要主机来存放网站的源码等数据。</p>
<p>个人博客。</p>
</blockquote>
<blockquote>
<p>首先，搭建本地服务器的个人博客是免费的，你可以直接用GitHub的域名，不需要买域名，也不需要买主机而且非常稳定。搭建出一个个人博客会让自己倍儿有成就感，能力的提升当然也不在话下。</p>
</blockquote>
<p>一期教程是完不成的，后续会继续发布博客部署以及主题优化等…</p>
<p>下面我们开启由“小白”转向“博客大佬”的蜕变过程</p>
<h3 id="Hexo简介"><a class="header-anchor" href="#Hexo简介">¶</a>Hexo简介</h3>
<p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p>
<p>第一期教程分为两部分：</p>
<ul>
<li>第一部分：hexo搭建的准备工作</li>
<li>第二部分：hexo的初级搭建及基本配置</li>
</ul>
<hr>
<h3 id="第一部分"><a class="header-anchor" href="#第一部分">¶</a>第一部分</h3>
<h4 id="hexo搭建的准备工作："><a class="header-anchor" href="#hexo搭建的准备工作：">¶</a>hexo搭建的准备工作：</h4>
<ol>
<li>安装Git</li>
<li>安装Node.js</li>
</ol>
<h5 id="1-安装Git"><a class="header-anchor" href="#1-安装Git">¶</a>1.安装Git</h5>
<p>windows：到git官网上下载,<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Download git</a>,下载后单击右键会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p>
<ul>
<li>
<p>选择自己对应的系统平台，我这里是用的Windows，点击下载，按照默认选项安装即可。</p>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/001.png" alt></p>
</li>
</ul>
<p>linux：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install git</span><br></pre></td></tr></table></figure>
<h5 id="2-安装Node-js"><a class="header-anchor" href="#2-安装Node-js">¶</a>2. 安装Node.js</h5>
<p>Hexo是基于node.js编写的，所以需要安装一下Node.js和里面的npm工具。</p>
<p>windows：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">node.js</a>选择LTS版本就行了。</p>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/002.png" alt></p>
<p>Linux：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install nodejs</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install npm</span><br></pre></td></tr></table></figure>
<blockquote>
<p>安装完成后，打开命令窗口检测一下：<code>win+R</code></p>
</blockquote>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/003.png" alt></p>
<p>依次输入： (注意输入法在英文状态下)</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line">git --<span class="keyword">version</span></span><br></pre></td></tr></table></figure>
<p>如果出现对应的版本号，那么表示本地环境搭建成功。</p>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/004.png" alt></p>
<blockquote>
<p>以上hexo的环境准备工作就完成了，下面的命令我们将使用git bash来敲命令行</p>
</blockquote>
<h3 id="第二部分"><a class="header-anchor" href="#第二部分">¶</a>第二部分</h3>
<h4 id="hexo的初级搭建及基本配置："><a class="header-anchor" href="#hexo的初级搭建及基本配置：">¶</a>hexo的初级搭建及基本配置：</h4>
<h5 id="1-GitHub注册"><a class="header-anchor" href="#1-GitHub注册">¶</a>1. GitHub注册</h5>
<ul>
<li>GitHub官网：<a href="https://github.com/%EF%BC%8C%E6%89%93%E5%BC%80GitHub%E5%AE%98%E7%BD%91%EF%BC%8C%E7%82%B9%E5%87%BB%E6%B3%A8%E5%86%8C%E3%80%82" target="_blank" rel="noopener">https://github.com/，打开GitHub官网，点击注册。</a></li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/005.png" alt></p>
<ul>
<li>注册自己的用户名，绑定邮箱等操作。</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/11.png" alt></p>
<ul>
<li>
<p>选择免费的账户</p>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/006.png" alt></p>
</li>
<li>
<p>下面是一个GitHub对新手的调查，可以直接跳过 <code>Skip this step</code></p>
</li>
<li>
<p>之后GitHub会向你的注册邮箱发送验证，打开你的邮箱进行验证，显示红框内容表示验证通过，先不用着急新建仓库。这一步就到这结束。</p>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/007.png" alt></p>
</li>
<li>
<p>下面在桌面或者其他空白处，单击鼠标右键，点击<code>Git Bash Here</code></p>
</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/008.png" alt></p>
<ul>
<li>
<p>依次输入：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"你的GitHub邮箱"</span></span><br></pre></td></tr></table></figure>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/17.png" alt></p>
<p>可以用以下两条，检查一下你有没有输对：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">git<span class="built_in"> config </span>user.name</span><br><span class="line">git<span class="built_in"> config </span>user.email</span><br></pre></td></tr></table></figure>
</li>
<li>
<p>输入：</p>
<figure class="highlight excel"><table><tr><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"你的GitHub邮箱"</span></span><br></pre></td></tr></table></figure>
<p>然后一路回车，创建SSH秘钥。这个时候它会告诉你已经生成了.ssh的文件夹。在你的电脑中找到这个文件夹。</p>
</li>
</ul>
<blockquote>
<p>ssh:简单来讲，就是一个秘钥。其中，<code>id_rsa.pub</code>是公共秘钥，可以随便给别人看；<code>id_rsa</code>是你这台电脑的私人秘钥，不能给别人看的。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p>
</blockquote>
<ul>
<li>进入下面路径，如果不显示的记得选择显示隐藏的项目。<br>
<code>路径： C: \用户\用户名\ .ssh</code></li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/009.png" alt></p>
<ul>
<li>
<p>用记事本打开<code>id_rsa.pub</code>文件，复制里面的内容。</p>
</li>
<li>
<p>登录<a href="https://github.com/" target="_blank" rel="noopener">GitHub</a>，进入<code>setting</code>。</p>
</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/010.png" alt></p>
<ul>
<li>选择左边的<code>SSH and GPG Keys</code>选项，进行添加加密。</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/011.png" alt></p>
<ul>
<li>点击<code>New SSH Key</code>进行添加。</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/012.png" alt></p>
<ul>
<li>Title自己取名字，把刚才复制的秘钥粘贴到Key中，然后点击<code>Add SSH Key</code>添加完成。</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/013.png" alt></p>
<ul>
<li>打开Git Bash，输入：</li>
</ul>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure>
<p>出现<code>Are you sure……</code>的时候输入yes回车。</p>
<p>最后显示<code>You've successfully……</code>的时候表示连接成功。</p>
<h5 id="2-创建GitHub-Pages仓库"><a class="header-anchor" href="#2-创建GitHub-Pages仓库">¶</a>2.创建GitHub Pages仓库</h5>
<p>GitHub Pages 是由 GitHub 官方提供的一种免费的静态站点托管服务，让我们可以在 GitHub 仓库里托管和发布自己的静态网站页面。可以把它理解为动态网站的主机。</p>
<ul>
<li>打开GitHub，点击右上角加号，然后点击<code>New repository</code>新建GitHub Pages仓库。</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/014.png" alt></p>
<ul>
<li>
<p>在Repository name中输入：<strong><a href="http://xn--eqr924avxo.github.io" target="_blank" rel="noopener">用户名.github.io</a></strong></p>
<p><code>Description</code><strong>选填</strong>。</p>
<p><strong>勾选</strong><code>Initialize this repository with a README</code></p>
<p>填好后点击<code>Create repository</code>。创建后默认启用HTTPS。</p>
<p><strong>博客的地址为:<a href="https://xn--eqr924avxo.github.io" target="_blank" rel="noopener">https://用户名.github.io</a></strong></p>
</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/015.png" alt></p>
<ul>
<li>这样GitHub仓库就创建完成了</li>
</ul>
<p><img src="/2020/05/27/%E4%BD%BF%E7%94%A8Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2-No-1/016.png" alt></p>
<hr>
<p>那么，到这里第一期的教程就结束了。后续部分会接着更新。</p>
]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>搭建hexo</tag>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/24/hello-world/</url>
    <content><![CDATA[<h6 id="前言"><a class="header-anchor" href="#前言">¶</a>前言</h6>
<p>Welcome to <a href="https://xinyumeng99.github.io/" target="_blank" rel="noopener">Stupid bunny</a>! This is my very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>
<h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start">¶</a>Quick Start</h2>
<h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post">¶</a>Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a class="header-anchor" href="#Run-server">¶</a>Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files">¶</a>Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites">¶</a>Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>HelloWorld</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>理性</tag>
        <tag>进步</tag>
        <tag>love</tag>
      </tags>
  </entry>
</search>
